[tox]
description = Default tox environments list
envlist =
    style,tests,doc
skip_missing_interpreters = true
isolated_build = true

[testenv]
description = Checks for project unit tests and coverage (if desired)
basepython =
    tests39: python3.9
    tests310: python3.10
    tests311: python3.11
    tests312: python3.12
    {style,tests,doc}: python3
skip_install = true
allowlist_externals =
    poetry
passenv =
    TEST_SL_URL
    TEST_ADMIN_USER
    TEST_ADMIN_PASS
    TEST_READ_USER
    TEST_READ_PASS
setenv =
    PYTHONUNBUFFERED = yes
    PYTEST_EXTRA_ARGS = --cov=ansys.grantami.jobqueue --cov-report=term --cov-report=xml:.cov/xml --cov-report=html:.cov/html
commands =
    poetry install
    poetry run pytest {env:PYTEST_MARKERS:} {env:PYTEST_EXTRA_ARGS:} {posargs:-vv}

[testenv:style]
description = Checks project code style
skip_install = true
deps =
    pre-commit
commands =
    pre-commit install
    poetry install
    poetry run -- pre-commit run --all-files --show-diff-on-failure

[testenv:doc]
description = Check if documentation generates properly
skip_install = true
allowlist_externals =
    poetry
commands =
    poetry install --with doc
    poetry run sphinx-build -d "{toxworkdir}/doc_doctree" doc/source "{toxinidir}/doc/_build/html" --color -W -bhtml -n --keep-going

[testenv:pdf]
description = Check if documentation generates properly
skip_install = true
allowlist_externals =
    poetry
commands =
    poetry install --with doc
    poetry run sphinx-build -M latex "{toxinidir}/doc/source" "{toxinidir}/doc/_build/pdf" --color -W -n --keep-going -j auto
	poetry run cd "{toxinidir}/doc/_build/pdf/latex"   
    poetry run latexmk -r latexmkrc -pdf *.tex -interaction=nonstopmode